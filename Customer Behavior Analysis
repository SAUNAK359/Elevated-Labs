{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.11","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":2549419,"sourceType":"datasetVersion","datasetId":1546318}],"dockerImageVersionId":31012,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-04-23T09:06:18.302366Z","iopub.execute_input":"2025-04-23T09:06:18.302568Z","iopub.status.idle":"2025-04-23T09:06:20.560695Z","shell.execute_reply.started":"2025-04-23T09:06:18.302550Z","shell.execute_reply":"2025-04-23T09:06:20.559799Z"}},"outputs":[{"name":"stdout","text":"/kaggle/input/customer-personality-analysis/marketing_campaign.csv\n","output_type":"stream"}],"execution_count":1},{"cell_type":"code","source":"import pandas as pd\nimport numpy as np\nfrom pathlib import Path","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-23T09:24:48.095489Z","iopub.execute_input":"2025-04-23T09:24:48.096936Z","iopub.status.idle":"2025-04-23T09:24:48.101817Z","shell.execute_reply.started":"2025-04-23T09:24:48.096854Z","shell.execute_reply":"2025-04-23T09:24:48.100799Z"}},"outputs":[],"execution_count":17},{"cell_type":"code","source":"dtypes = {\n    'ID': 'int32', 'Year_Birth': 'int16', 'Education': 'category',\n    'Marital_Status': 'category', 'Income': 'float32',\n    'Kidhome': 'int8', 'Teenhome': 'int8'\n}\ndf = pd.read_csv('/kaggle/input/customer-personality-analysis/marketing_campaign.csv', \n                 sep='\\t', dtype=dtypes, parse_dates=['Dt_Customer'], dayfirst=True)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-23T09:25:36.374174Z","iopub.execute_input":"2025-04-23T09:25:36.374586Z","iopub.status.idle":"2025-04-23T09:25:36.434987Z","shell.execute_reply.started":"2025-04-23T09:25:36.374558Z","shell.execute_reply":"2025-04-23T09:25:36.433923Z"}},"outputs":[],"execution_count":18},{"cell_type":"code","source":"df = (df\n      .assign(\n          Age=lambda x: pd.Timestamp.now().year - x['Year_Birth'],\n          Total_Children=lambda x: x['Kidhome'] + x['Teenhome'],\n          Is_Partner=lambda x: x['Marital_Status'].isin(['Married', 'Together']).astype('int8'),\n          Education_Level=lambda x: x['Education'].map({\n              'Basic': 1, '2n Cycle': 2, 'Graduation': 3, \n              'Master': 4, 'PhD': 5}).astype('int8'),\n          Income_Group=lambda x: pd.cut(x['Income'], bins=[0, 30000, 70000, 150000, np.inf],\n                                      labels=['Low', 'Medium', 'High', 'Elite'])\n      )\n      .query('18 <= Age <= 100')\n      .drop(columns=['Year_Birth'])\n      .dropna(subset=['Income'])\n      .astype({'Age': 'int8', 'Total_Children': 'int8'})\n      .pipe(lambda x: x[~x.duplicated()])\n)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-23T09:25:52.865890Z","iopub.execute_input":"2025-04-23T09:25:52.866876Z","iopub.status.idle":"2025-04-23T09:25:52.910736Z","shell.execute_reply.started":"2025-04-23T09:25:52.866843Z","shell.execute_reply":"2025-04-23T09:25:52.909873Z"}},"outputs":[],"execution_count":19},{"cell_type":"code","source":"for col in df.select_dtypes(['object', 'category']):\n    df[col] = df[col].astype('category')\n\n\noutput_path = Path('processed_data')\noutput_path.mkdir(exist_ok=True)\ndf.to_csv(output_path/'customer_analytics_ready.csv', index=False, \n          compression='gzip' if len(df) > 1e6 else None)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-23T09:26:13.858831Z","iopub.execute_input":"2025-04-23T09:26:13.859204Z","iopub.status.idle":"2025-04-23T09:26:13.894711Z","shell.execute_reply.started":"2025-04-23T09:26:13.859180Z","shell.execute_reply":"2025-04-23T09:26:13.893590Z"}},"outputs":[],"execution_count":20},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null}]}